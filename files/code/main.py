from machine import Pin, SPI, SoftI2C, ADC, Timer

from pico_dht_22 import PicoDHT22
import ssd1306

from buzzer_music import music

from rotary_irq_rp2 import RotaryIRQ
import time
import neopixel
from math import sin, cos, pi
led = Pin("LED", Pin.OUT)
timer = Timer()

def blink(timer):
    led.toggle()
neopixelBrightness = 0.25
timer.init(freq=2.5, mode=Timer.PERIODIC, callback=blink)

modes =["temp", "music", "neopixel", "something else"]
modeArrayLength = len(modes)
modeLength = (modeArrayLength - 1)
modeIndex = 0
is_mode_sel = False

speakerPin = Pin(14)
sound1 = '0 E4 1 15'
song1 ='722 F5 1 14;723 F5 1 14;724 F5 1 14;725 G5 1 14;726 G#5 2 14;722 F6 1 14;723 F6 1 14;724 F6 1 14;725 G6 1 14;726 G#6 2 14;728 F6 1 14;729 F6 1 14;730 F6 1 14;731 G#6 1 14;732 G6 6 14;728 F5 1 14;729 F5 1 14;730 F5 1 14;731 G#5 1 14;732 G5 6 14;738 F5 1 14;739 F5 1 14;740 F5 1 14;741 G5 1 14;742 G#5 2 14;738 F6 1 14;739 F6 1 14;740 F6 1 14;741 G6 1 14;742 G#6 2 14;744 F6 1 14;745 F6 1 14;746 F6 1 14;747 G#6 1 14;748 G6 6 14;744 F5 1 14;745 F5 1 14;746 F5 1 14;747 G#5 1 14;748 G5 6 14;754 F5 1 14;755 F5 1 14;756 F5 1 14;757 G5 1 14;758 G#5 2 14;754 F6 1 14;755 F6 1 14;756 F6 1 14;757 G6 1 14;758 G#6 2 14;760 F6 1 14;761 F6 1 14;762 F6 1 14;763 G#6 1 14;764 G6 6 14;760 F5 1 14;761 F5 1 14;762 F5 1 14;763 G#5 1 14;764 G5 6 14;770 F5 1 14;771 F5 1 14;772 F5 1 14;773 G5 1 14;774 G#5 2 14;770 F6 1 14;771 F6 1 14;772 F6 1 14;773 G6 1 14;774 G#6 2 14;776 F6 1 14;777 F6 1 14;778 C7 1 14;779 G#6 1 14;780 G6 6 14;776 F5 1 14;777 F5 1 14;778 C6 1 14;779 G#5 1 14;780 G5 6 14;64 G6 1 14;65 G6 1 14;66 G6 1 14;67 G#6 1 14;68 G6 1 14;69 G6 1 14;70 G6 1 14;71 G#6 1 14;72 G6 2 14;788 G6 2 14;790 C7 2 14;792 G6 2 14;64 G5 1 14;65 G5 1 14;66 G5 1 14;67 G#5 1 14;68 G5 1 14;69 G5 1 14;70 G5 1 14;71 G#5 1 14;72 G5 2 14;788 G5 2 14;790 C6 2 14;792 G5 2 14;794 G#6 12 14;808 G6 2 14;806 C7 2 14;794 G#5 2 14;796 G#5 4 14;800 G#5 1 14;801 G#5 2 14;803 G#5 1 14;804 F5 2 14;804 F6 2 14;806 C6 2 14;808 G5 2 14;810 G6 2 14;812 G#6 1 14;813 A#6 1 14;814 G#6 8 14;822 G#6 2 14;816 G#5 1 14;817 G#5 2 14;819 G#5 1 14;820 G#5 2 14;820 G#6 2 14;824 A#6 2 14;822 G#5 2 14;824 A#5 2 14;722 F3 4 14;736 F3 2 14;734 F3 2 14;732 F3 2 14;726 G#3 2 14;728 F3 4 14;738 F3 4 14;752 F3 2 14;750 F3 2 14;748 F3 2 14;742 G#3 2 14;744 F3 4 14;754 F3 4 14;768 F3 2 14;766 F3 2 14;764 F3 2 14;758 G#3 2 14;760 F3 4 14;770 F3 4 14;784 F3 2 14;782 F3 2 14;780 F3 2 14;774 G#3 2 14;776 F3 4 14;794 F3 2 14;796 F3 4 14;800 F3 1 14;801 F3 2 14;803 F3 1 14;804 F3 2 14;810 G#3 2 14;812 G#3 4 14;810 G5 2 14;812 G#5 1 14;813 A#5 1 14;814 G#5 2 14;826 C7 3 14;829 C#7 1 14;826 C6 3 14;829 C#6 1 14;830 C7 8 14;838 C7 2 14;840 A#6 1 14;841 G#6 1 14;830 C6 2 14;832 C4 1 14;833 C4 2 14;835 C4 1 14;833 C6 2 14;835 C6 1 14;836 G#5 2 14;836 G#6 2 14;838 C6 2 14;840 A#5 1 14;841 G#5 1 14;832 C6 1 14;826 C4 2 14;828 C4 4 14;842 A#6 10 14;856 C7 2 14;854 A#6 2 14;852 A#6 2 14;842 A#5 2 14;844 A#5 4 14;842 A#4 2 14;844 A#4 4 14;850 A#5 2 14;854 A#5 2 14;852 A#5 2 14;856 C6 2 14;846 C6 2 14;816 G#3 1 14;817 G#3 2 14;819 G#3 1 14;820 G#3 2 14;836 C4 2 14;848 A#5 2 14;849 G#5 1 14;848 A#4 1 14;849 A#4 2 14;851 A#4 1 14;852 A#4 2 14;858 C#7 12 14;872 C7 2 14;870 F7 2 14;858 C#6 2 14;860 C#6 4 14;864 C#6 1 14;865 C#6 2 14;867 C#6 1 14;868 A#6 2 14;858 C#4 2 14;860 C#4 4 14;864 C#4 1 14;865 C#4 2 14;867 C#4 1 14;868 C#4 2 14;868 A#5 2 14;872 C6 2 14;870 F6 2 14;874 F4 2 14;876 F4 4 14;880 F4 1 14;881 F4 2 14;883 F4 1 14;884 F4 2 14;874 C7 2 14;874 C6 2 14;876 C#6 1 14;877 D#6 1 14;876 C#7 1 14;877 D#7 1 14;878 C#7 6 14;878 C#6 2 14;880 C#6 1 14;881 C#6 2 14;883 C#6 1 14;884 C#6 2 14;886 C#6 2 14;888 D#6 2 14;884 C#7 2 14;886 C#7 2 14;888 D#7 2 14;890 F7 3 14;893 F#7 1 14;894 F7 8 14;900 G7 2 14;900 G6 2 14;898 F6 2 14;894 F6 4 14;893 F#6 1 14;890 F6 3 14;902 G#6 2 14;902 G#7 2 14;904 G7 1 14;905 F7 1 14;904 G6 1 14;905 F6 1 14;896 F#6 2 14;890 G#4 2 14;892 G#4 4 14;896 G#4 1 14;897 G#4 2 14;899 G#4 1 14;900 G#4 2 14;906 G7 2 14;204 G6 1 14;205 F6 1 14;206 G6 1 14;207 G#6 1 14;208 G#6 12 14;208 F3 8 14;216 F3 8 14;212 G5 4 14;216 F5 4 14;220 C6 2 14;222 A#5 2 14;224 C6 12 14;228 G5 4 14;232 F5 4 14;236 F5 2 14;238 G#5 2 14;224 F3 8 14;232 F3 8 14;240 F3 8 14;248 F3 8 14;256 F3 8 14;264 F3 8 14;240 C#6 8 14;244 G#5 4 14;248 C#6 8 14;256 C#6 4 14;260 D#6 4 14;264 F6 4 14;268 D#6 4 14;272 F3 8 14;280 F3 8 14;288 F3 8 14;296 F3 8 14;272 G6 2 14;274 G#6 2 14;276 A#6 4 14;280 A#6 8 14;284 G6 4 14;288 G#6 2 14;290 G6 2 14;292 F6 4 14;296 F6 8 14;304 F3 8 14;312 F3 8 14;320 F3 8 14;328 F3 8 14;304 G6 1 14;305 G#6 1 14;306 A#6 1 14;307 C7 1 14;308 C#7 4 14;312 C#7 4 14;316 C#7 2 14;318 C7 2 14;320 E7 16 14;0 F5 1 14;1 F5 1 14;2 F5 1 14;3 G5 1 14;4 G#5 2 14;0 F6 1 14;1 F6 1 14;2 F6 1 14;3 G6 1 14;4 G#6 2 14;6 F6 1 14;7 F6 1 14;8 F6 1 14;9 G#6 1 14;10 G6 6 14;6 F5 1 14;7 F5 1 14;8 F5 1 14;9 G#5 1 14;10 G5 6 14;16 F5 1 14;17 F5 1 14;18 F5 1 14;19 G5 1 14;20 G#5 2 14;16 F6 1 14;17 F6 1 14;18 F6 1 14;19 G6 1 14;20 G#6 2 14;22 F6 1 14;23 F6 1 14;24 F6 1 14;25 G#6 1 14;26 G6 6 14;22 F5 1 14;23 F5 1 14;24 F5 1 14;25 G#5 1 14;26 G5 6 14;32 F5 1 14;33 F5 1 14;34 F5 1 14;35 G5 1 14;36 G#5 2 14;32 F6 1 14;33 F6 1 14;34 F6 1 14;35 G6 1 14;36 G#6 2 14;38 F6 1 14;39 F6 1 14;40 F6 1 14;41 G#6 1 14;42 G6 6 14;38 F5 1 14;39 F5 1 14;40 F5 1 14;41 G#5 1 14;42 G5 6 14;48 F5 1 14;49 F5 1 14;50 F5 1 14;51 G5 1 14;52 G#5 2 14;48 F6 1 14;49 F6 1 14;50 F6 1 14;51 G6 1 14;52 G#6 2 14;54 F6 1 14;55 F6 1 14;56 C7 1 14;57 G#6 1 14;58 G6 6 14;54 F5 1 14;55 F5 1 14;56 C6 1 14;57 G#5 1 14;58 G5 6 14;0 F3 4 14;14 F3 2 14;12 F3 2 14;10 F3 2 14;4 G#3 2 14;6 F3 4 14;16 F3 4 14;30 F3 2 14;28 F3 2 14;26 F3 2 14;20 G#3 2 14;22 F3 4 14;32 F3 4 14;46 F3 2 14;44 F3 2 14;42 F3 2 14;36 G#3 2 14;38 F3 4 14;48 F3 4 14;62 F3 2 14;60 F3 2 14;58 F3 2 14;52 G#3 2 14;54 F3 4 14;400 G5 2 14;402 G#5 2 14;404 A#5 12 14;400 F3 8 14;408 F3 8 14;416 F3 8 14;424 F3 8 14;432 F3 8 14;440 F3 8 14;448 F3 8 14;456 F3 8 14;416 G#5 2 14;418 G5 2 14;420 F5 12 14;432 A#5 2 14;434 C6 2 14;436 C#6 12 14;448 C6 2 14;450 A#5 2 14;452 G#5 12 14;464 C#6 1 14;465 C6 1 14;466 A#5 1 14;467 G#5 1 14;468 F#5 12 14;478 G#5 2 14;464 F3 8 14;472 F3 8 14;480 F3 8 14;488 F3 8 14;480 C6 2 14;482 A#5 1 14;483 G#5 1 14;484 G5 12 14;496 F3 8 14;504 F3 8 14;512 F3 8 14;520 F3 8 14;496 F5 12 14;508 G#5 2 14;510 G5 2 14;512 C#6 4 14;516 F5 12 14;528 F3 8 14;536 F3 8 14;544 F3 8 14;552 F3 8 14;560 F3 8 14;568 F3 8 14;528 F6 4 14;532 E6 8 14;540 C6 4 14;544 C#6 16 14;560 F5 1 14;561 F5 1 14;562 F5 1 14;563 F5 1 14;564 F5 2 14;566 F5 1 14;567 F5 1 14;568 F#5 1 14;569 F#5 1 14;570 F#5 1 14;571 F#5 1 14;572 F#5 2 14;574 D#5 2 14;576 F5 12 14;74 G6 2 14;76 C7 2 14;78 G6 2 14;74 G5 2 14;76 C6 2 14;78 G5 2 14;80 G#6 12 14;94 G6 2 14;92 C7 2 14;80 G#5 2 14;82 G#5 4 14;86 G#5 1 14;87 G#5 2 14;89 G#5 1 14;90 F5 2 14;90 F6 2 14;92 C6 2 14;94 G5 2 14;96 G6 2 14;98 G#6 1 14;99 A#6 1 14;100 G#6 8 14;108 G#6 2 14;102 G#5 1 14;103 G#5 2 14;105 G#5 1 14;106 G#5 2 14;106 G#6 2 14;110 A#6 2 14;108 G#5 2 14;110 A#5 2 14;80 F3 2 14;82 F3 4 14;86 F3 1 14;87 F3 2 14;89 F3 1 14;90 F3 2 14;96 G#3 2 14;98 G#3 4 14;96 G5 2 14;98 G#5 1 14;99 A#5 1 14;100 G#5 2 14;112 C7 3 14;115 C#7 1 14;112 C6 3 14;115 C#6 1 14;116 C7 8 14;124 C7 2 14;126 A#6 1 14;127 G#6 1 14;116 C6 2 14;118 C4 1 14;119 C4 2 14;121 C4 1 14;119 C6 2 14;121 C6 1 14;122 G#5 2 14;122 G#6 2 14;124 C6 2 14;126 A#5 1 14;127 G#5 1 14;118 C6 1 14;112 C4 2 14;114 C4 4 14;128 A#6 10 14;142 C7 2 14;140 A#6 2 14;138 A#6 2 14;128 A#5 2 14;130 A#5 4 14;128 A#4 2 14;130 A#4 4 14;136 A#5 2 14;140 A#5 2 14;138 A#5 2 14;142 C6 2 14;132 C6 2 14;102 G#3 1 14;103 G#3 2 14;105 G#3 1 14;106 G#3 2 14;122 C4 2 14;134 A#5 2 14;135 G#5 1 14;134 A#4 1 14;135 A#4 2 14;137 A#4 1 14;138 A#4 2 14;144 C#7 12 14;158 C7 2 14;156 F7 2 14;144 C#6 2 14;146 C#6 4 14;150 C#6 1 14;151 C#6 2 14;153 C#6 1 14;154 A#6 2 14;144 C#4 2 14;146 C#4 4 14;150 C#4 1 14;151 C#4 2 14;153 C#4 1 14;154 C#4 2 14;154 A#5 2 14;158 C6 2 14;156 F6 2 14;160 F4 2 14;162 F4 4 14;166 F4 1 14;167 F4 2 14;169 F4 1 14;170 F4 2 14;160 C7 2 14;160 C6 2 14;162 C#6 1 14;163 D#6 1 14;162 C#7 1 14;163 D#7 1 14;164 C#7 6 14;164 C#6 2 14;166 C#6 1 14;167 C#6 2 14;169 C#6 1 14;170 C#6 2 14;172 C#6 2 14;174 D#6 2 14;170 C#7 2 14;172 C#7 2 14;174 D#7 2 14;176 F7 3 14;179 F#7 1 14;180 F7 8 14;186 G7 2 14;186 G6 2 14;184 F6 2 14;180 F6 4 14;179 F#6 1 14;176 F6 3 14;188 G#6 2 14;188 G#7 2 14;190 G7 1 14;191 F7 1 14;190 G6 1 14;191 F6 1 14;182 F#6 2 14;176 G#4 2 14;178 G#4 4 14;182 G#4 1 14;183 G#4 2 14;185 G#4 1 14;186 G#4 2 14;192 G7 12 14;192 G6 2 14;194 G6 4 14;196 G#6 2 14;198 G6 2 14;199 F6 1 14;200 G6 2 14;906 G6 2 14;336 F5 1 14;337 F5 1 14;338 F5 1 14;339 G5 1 14;340 G#5 2 14;336 F6 1 14;337 F6 1 14;338 F6 1 14;339 G6 1 14;340 G#6 2 14;342 F6 1 14;343 F6 1 14;344 F6 1 14;345 G#6 1 14;346 G6 6 14;342 F5 1 14;343 F5 1 14;344 F5 1 14;345 G#5 1 14;346 G5 6 14;352 F5 1 14;353 F5 1 14;354 F5 1 14;355 G5 1 14;356 G#5 2 14;352 F6 1 14;353 F6 1 14;354 F6 1 14;355 G6 1 14;356 G#6 2 14;358 F6 1 14;359 F6 1 14;360 F6 1 14;361 G#6 1 14;362 G6 6 14;358 F5 1 14;359 F5 1 14;360 F5 1 14;361 G#5 1 14;362 G5 6 14;368 F5 1 14;369 F5 1 14;370 F5 1 14;371 G5 1 14;372 G#5 2 14;368 F6 1 14;369 F6 1 14;370 F6 1 14;371 G6 1 14;372 G#6 2 14;374 F6 1 14;375 F6 1 14;376 F6 1 14;377 G#6 1 14;378 G6 6 14;374 F5 1 14;375 F5 1 14;376 F5 1 14;377 G#5 1 14;378 G5 6 14;384 F5 1 14;385 F5 1 14;386 F5 1 14;387 G5 1 14;388 G#5 2 14;384 F6 1 14;385 F6 1 14;386 F6 1 14;387 G6 1 14;388 G#6 2 14;390 F6 1 14;391 F6 1 14;392 C7 1 14;393 G#6 1 14;394 G6 6 14;390 F5 1 14;391 F5 1 14;392 C6 1 14;393 G#5 1 14;394 G5 6 14;336 F3 4 14;350 F3 2 14;348 F3 2 14;346 F3 2 14;340 G#3 2 14;342 F3 4 14;352 F3 4 14;366 F3 2 14;364 F3 2 14;362 F3 2 14;356 G#3 2 14;358 F3 4 14;368 F3 4 14;382 F3 2 14;380 F3 2 14;378 F3 2 14;372 G#3 2 14;374 F3 4 14;384 F3 4 14;398 F3 2 14;396 F3 2 14;394 F3 2 14;388 G#3 2 14;390 F3 4 14;588 G6 2 14;590 C7 2 14;592 G6 2 14;588 G5 2 14;590 C6 2 14;592 G5 2 14;594 G#6 12 14;608 G6 2 14;606 C7 2 14;594 G#5 2 14;596 G#5 4 14;600 G#5 1 14;601 G#5 2 14;603 G#5 1 14;604 F5 2 14;604 F6 2 14;606 C6 2 14;608 G5 2 14;610 G6 2 14;612 G#6 1 14;613 A#6 1 14;614 G#6 8 14;622 G#6 2 14;616 G#5 1 14;617 G#5 2 14;619 G#5 1 14;620 G#5 2 14;620 G#6 2 14;624 A#6 2 14;622 G#5 2 14;624 A#5 2 14;594 F3 2 14;596 F3 4 14;600 F3 1 14;601 F3 2 14;603 F3 1 14;604 F3 2 14;610 G#3 2 14;612 G#3 4 14;610 G5 2 14;612 G#5 1 14;613 A#5 1 14;614 G#5 2 14;626 C7 3 14;629 C#7 1 14;626 C6 3 14;629 C#6 1 14;630 C7 8 14;638 C7 2 14;640 A#6 1 14;641 G#6 1 14;630 C6 2 14;632 C4 1 14;633 C4 2 14;635 C4 1 14;633 C6 2 14;635 C6 1 14;636 G#5 2 14;636 G#6 2 14;638 C6 2 14;640 A#5 1 14;641 G#5 1 14;632 C6 1 14;626 C4 2 14;628 C4 4 14;642 A#6 10 14;656 C7 2 14;654 A#6 2 14;652 A#6 2 14;642 A#5 2 14;644 A#5 4 14;642 A#4 2 14;644 A#4 4 14;650 A#5 2 14;654 A#5 2 14;652 A#5 2 14;656 C6 2 14;646 C6 2 14;616 G#3 1 14;617 G#3 2 14;619 G#3 1 14;620 G#3 2 14;636 C4 2 14;648 A#5 2 14;649 G#5 1 14;648 A#4 1 14;649 A#4 2 14;651 A#4 1 14;652 A#4 2 14;658 C#7 12 14;672 C7 2 14;670 F7 2 14;658 C#6 2 14;660 C#6 4 14;664 C#6 1 14;665 C#6 2 14;667 C#6 1 14;668 A#6 2 14;658 C#4 2 14;660 C#4 4 14;664 C#4 1 14;665 C#4 2 14;667 C#4 1 14;668 C#4 2 14;668 A#5 2 14;672 C6 2 14;670 F6 2 14;674 F4 2 14;676 F4 4 14;680 F4 1 14;681 F4 2 14;683 F4 1 14;684 F4 2 14;674 C7 2 14;674 C6 2 14;676 C#6 1 14;677 D#6 1 14;676 C#7 1 14;677 D#7 1 14;678 C#7 6 14;678 C#6 2 14;680 C#6 1 14;681 C#6 2 14;683 C#6 1 14;684 C#6 2 14;686 C#6 2 14;688 D#6 2 14;684 C#7 2 14;686 C#7 2 14;688 D#7 2 14;690 F7 3 14;693 F#7 1 14;694 F7 8 14;700 G7 2 14;700 G6 2 14;698 F6 2 14;694 F6 4 14;693 F#6 1 14;690 F6 3 14;702 G#6 2 14;702 G#7 2 14;704 G7 1 14;705 F7 1 14;704 G6 1 14;705 F6 1 14;696 F#6 2 14;690 G#4 2 14;692 G#4 4 14;696 G#4 1 14;697 G#4 2 14;699 G#4 1 14;700 G#4 2 14;706 G7 14 14;708 G6 4 14;710 G#6 2 14;712 G6 2 14;713 F6 1 14;714 G6 6 14;706 G6 14 14;908 G7 2 14;908 G6 2 14;910 G#6 2 14;910 G#7 2 14;912 G7 1 14;913 F7 1 14;912 G6 1 14;913 F6 1 14;914 G7 14 14;914 G6 14 14'
# creating a Speaker object

# continuously beep at 1 sec interval while the board has power
# note: a passive buzzer can also be used to play different tones
# 
dht_sensor=PicoDHT22(Pin(15,Pin.IN,Pin.PULL_UP),dht11=True)
# #You can choose any other combination of I2C pins
i2c = SoftI2C(scl=Pin(19), sda=Pin(18))

oled_width = 128
oled_height = 64
oled = ssd1306.SSD1306_I2C(oled_width, oled_height, i2c)
speakerPin.value(0)

#Find a piece of music on onlinesequencer.net, click edit,
#then select all notes with CTRL+A and copy them with CTRL+C
 
#Paste string as shown above after removing ";:" from
#the end and "Online Sequencer:120233:" from the start

#One buzzer on pin 14
mode1 = music(sound1, pins=[speakerPin])
mode2 = music(song1, pins=[speakerPin])
mode1.stop()
mode2.stop()
#Intialize the SPI
spi = SPI(0, baudrate=10000000, polarity=1, phase=0, sck=Pin(2), mosi=Pin(3))
ss = Pin(5, Pin.OUT)
 
np = neopixel.NeoPixel(Pin(24), 1)
init_color = (10, 0, 0)
np.fill(init_color) # set to black, no brightness
np.write()

SW = Pin(22,Pin.IN,Pin.PULL_UP)  
 
r = RotaryIRQ(pin_num_clk=20,
              pin_num_dt=17,
              min_val=0,
              incr=100,
              half_step=True,
              reverse=False,
              range_mode=RotaryIRQ.RANGE_UNBOUNDED)
val_old = r.value()

oled.fill(0)
oled.text("Booting Up!", 10, 10, 20)
oled.show()
temp_tick = 0
lasttime = time.ticks_ms()
lasttimesong = time.ticks_ms()
lasttime_sel_screen = time.ticks_ms()
lasttimenp = time.ticks_ms()
lasttimenp_screen = time.ticks_ms()

while True:
    try:
        
        devices = i2c.scan()

        if len(devices) == 0:
          print("No i2c device !")
        else:
            #####################################
            ### TEMPERATURE MODE
            #####################################
            if modes[modeIndex]=="temp" and is_mode_sel==False:
                if time.ticks_ms() > 1000 + lasttime:
                    T,H = dht_sensor.read()
                    
                    if T is None:
                        (" sensor error")
                        continue
                    else:
                        oled.fill(0)
                        oled.text(str('H: ' +"{:0.2f}".format(H)+ "  %",2),40,5)
                        oled.text(str('T: ' +"{:0.2f}".format(T)+ "  C",2),40,19)
                        oled.text(str('Time: ' +"{:0.2f}".format(lasttime)+ "  ms",2),40,33)
                        oled.show()
                        
                    lasttime = time.ticks_ms()
            #####################################
            ### MUSIC MODE
            #####################################
            elif modes[modeIndex]=="music" and is_mode_sel==False:
                if mode2.stopped == True:
                    mode2.resume()
                if time.ticks_ms() > 40 + lasttimesong:
                    print(mode2.tick())
                    print("Mode 2 ticking!")
                    lasttimesong = time.ticks_ms()
            
            #####################################
            ### NEOPIXEL MODE
            #####################################
            elif modes[modeIndex]=="neopixel" and is_mode_sel==False:
                if time.ticks_ms() > 10 + lasttimenp_screen:
                    step = 255//(time.ticks_ms()/10000)
                    
                    if time.ticks_ms() > 10 + lasttimenp:
                        lasttimenp = time.ticks_ms()
                        blue = int(neopixelBrightness * (255 * (0.5 * (1 + sin((time.ticks_ms() / 10000) * pi - pi / 2)))))
                        green = int(neopixelBrightness * (255 * (0.5 * (1 + cos((time.ticks_ms() / 10000) * pi + pi / 2)))))
                        red = int((neopixelBrightness * 255) - blue)
                        color = (red, green, blue)
                        np.fill(color)
                        np.write()
                        if time.ticks_ms() > 100 + lasttimenp_screen:
                            oled.fill(0)
                            oled.text("NEOPIXEL DATA", 12, 5)
                            oled.text(str("Red: " + "{:0.2f}".format(red), 2), 12,19)
                            oled.text(str("Gree: " + "{:0.2f}".format(green), 2), 12,33)
                            oled.text(str("Blue: " + "{:0.2f}".format(blue), 2), 12,47)
                            oled.show()
                        
                        lasttimenp_screen = time.ticks_ms()
                    
            ####################################
            ### SELECT MODE
            ####################################
            elif is_mode_sel == True:
                if time.ticks_ms() > 10 + lasttime_sel_screen:
                    lasttime_sel_screen = time.ticks_ms()
                    oled.fill(0)
                    oled.text(str('Mode:',6), 5,5)
                    oled.text(str(f'{modes[modeIndex]}'), 5, 21)
                    oled.show()
                    
                
                
        
        #####################################
        ### ENCODER CONTROLS
        #####################################
        val_new = r.value()
        if SW.value()==0 and n==0:
            mode2.stop()
            np.fill(init_color)
            if time.ticks_ms() > 40 + lasttimesong:
                mode1.resume()
                print(mode1.tick())
                time.sleep_ms(50)
                mode1.stop()
                lasttimesong = time.ticks_ms()
                print("Mode 1 ticking!")
            if is_mode_sel==False:   
                n=1
                is_mode_sel = True
                print("Selecting mode...")
            elif is_mode_sel==True:  
                n=1
                is_mode_sel=False
                print("mode selected: ", modes[modeIndex])
        if SW.value()==1:
            n=0  
        if val_old != val_new:
            if is_mode_sel == True:
                if val_old > val_new:
                    modeIndex += 1
                        
                elif val_old < val_new:
                    modeIndex -= 1
                    
                if (modeIndex < 0):
                    modeIndex = modeLength
                elif (modeIndex > modeLength):
                    modeIndex = 0
                val_old = val_new  
          
    except KeyboardInterrupt:
        mode1.stop()
        mode2.stop()
        print("STOPPING")
        np.fill(init_color)
        break






